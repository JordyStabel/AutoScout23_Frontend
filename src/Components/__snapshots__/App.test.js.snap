// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header Rendering a simple component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <_default />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <WithStyles(Toolbar)>
        <WithStyles(Typography)
          color="inherit"
          style={
            Object {
              "flex": 1,
              "marginLeft": 20,
            }
          }
          variant="title"
        >
          AutoScout23 - Buy & Sell Cars
        </WithStyles(Typography)>
        <WithStyles(FormControlLabel)
          control={
            <WithStyles(Switch)
              color="secondary"
              onChange={[Function]}
            />
          }
          label="Dark-mode"
        />
        <_default />
      </WithStyles(Toolbar)>,
      "position": "static",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(Typography)
            color="inherit"
            style={
              Object {
                "flex": 1,
                "marginLeft": 20,
              }
            }
            variant="title"
          >
            AutoScout23 - Buy & Sell Cars
          </WithStyles(Typography)>,
          <WithStyles(FormControlLabel)
            control={
              <WithStyles(Switch)
                color="secondary"
                onChange={[Function]}
              />
            }
            label="Dark-mode"
          />,
          <_default />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "AutoScout23 - Buy & Sell Cars",
            "color": "inherit",
            "style": Object {
              "flex": 1,
              "marginLeft": 20,
            },
            "variant": "title",
          },
          "ref": null,
          "rendered": "AutoScout23 - Buy & Sell Cars",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "control": <WithStyles(Switch)
              color="secondary"
              onChange={[Function]}
            />,
            "label": "Dark-mode",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "allergies": undefined,
            "categories": undefined,
            "makes": undefined,
            "onCreate": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <WithStyles(Toolbar)>
          <WithStyles(Typography)
            color="inherit"
            style={
              Object {
                "flex": 1,
                "marginLeft": 20,
              }
            }
            variant="title"
          >
            AutoScout23 - Buy & Sell Cars
          </WithStyles(Typography)>
          <WithStyles(FormControlLabel)
            control={
              <WithStyles(Switch)
                color="secondary"
                onChange={[Function]}
              />
            }
            label="Dark-mode"
          />
          <_default />
        </WithStyles(Toolbar)>,
        "position": "static",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Typography)
              color="inherit"
              style={
                Object {
                  "flex": 1,
                  "marginLeft": 20,
                }
              }
              variant="title"
            >
              AutoScout23 - Buy & Sell Cars
            </WithStyles(Typography)>,
            <WithStyles(FormControlLabel)
              control={
                <WithStyles(Switch)
                  color="secondary"
                  onChange={[Function]}
                />
              }
              label="Dark-mode"
            />,
            <_default />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "AutoScout23 - Buy & Sell Cars",
              "color": "inherit",
              "style": Object {
                "flex": 1,
                "marginLeft": 20,
              },
              "variant": "title",
            },
            "ref": null,
            "rendered": "AutoScout23 - Buy & Sell Cars",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "control": <WithStyles(Switch)
                color="secondary"
                onChange={[Function]}
              />,
              "label": "Dark-mode",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "allergies": undefined,
              "categories": undefined,
              "makes": undefined,
              "onCreate": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
